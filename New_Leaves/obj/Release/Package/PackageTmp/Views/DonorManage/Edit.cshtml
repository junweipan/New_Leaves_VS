@model New_Leaves.Models.Donor

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal contact-form">
        <h3>Edit you information</h3>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.IsEmailVerified, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsEmailVerified)
                    @Html.ValidationMessageFor(model => model.IsEmailVerified, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.ActivationCode, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.ActivationCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivationCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden="hidden">
            @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-9">
                <input type="submit" value="Save" class="btn-theme btn-style-two pull-right" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Home page", "Index")
</div>
