@model New_Leaves.Models.Refugee

@{
    ViewBag.Title = "RefugeeModifyAccount";
    Layout = "~/Views/Shared/_LayoutRefugee.cshtml";
}

>

@using (Html.BeginForm( new { id = Model.RID }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal contact-form">
        <h3>RefugeeModifyAccount</h3>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RID)

        <div hidden="hidden" class="form-group">
            @Html.LabelFor(model => model.AuthorityCode, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.AuthorityCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuthorityCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RefugeeFName, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.RefugeeFName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefugeeFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RefugeeLName, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.RefugeeLName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefugeeLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div hidden="hidden" class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Family_Description, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Family_Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Family_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div hidden="hidden"class="form-group">
            @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
            <div class="col-md-offset-3 col-md-6">
                @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-9">
                <input type="submit" value="Save" class="btn-theme btn-style-two pull-right" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Go back ", "RefugeeIndex", "Home", new { email = User.Identity.Name }, null)
</div>
