@model New_Leaves.Models.Item

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="contact-form col-md-offset-2 col-md-8">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Item_name, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Item_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Item_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
               @{
                   List<SelectListItem> listItems = new List<SelectListItem>();
                   listItems.Add(new SelectListItem
                   {
                       Text = "Living Room",
                       Value = "Living_Room",
                       Selected = true
                   });
                   listItems.Add(new SelectListItem
                   {
                       Text = "Bedroom",
                       Value = "Bedroom",
                       
                   });
                   listItems.Add(new SelectListItem
                   {
                       Text = "Dining Room",
                       Value = "Dining_Room"
                   });
                   listItems.Add(new SelectListItem
                   {
                       Text = "Study Room",
                       Value = "Study_Room"
                   });
                   listItems.Add(new SelectListItem
                   {
                       Text = "Cleaning",
                       Value = "Cleaning"
                   });
                   listItems.Add(new SelectListItem
                   {
                       Text = "Kitchen",
                       Value = "Kitchen"
                   });
                   listItems.Add(new SelectListItem
                   {
                       Text = "Laundry",
                       Value = "Laundry"
                   });
            }

                        
                        @Html.DropDownListFor(model => model.Category, listItems, "-- Select Category --", new { htmlAttributes = new { @class = "form-control" } })
               @*         @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } }) *@
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Estimated_price, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Estimated_price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Estimated_price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Create" class="theme-btn btn-style-two pull-right" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
