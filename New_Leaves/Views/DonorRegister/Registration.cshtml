@model New_Leaves.Models.Donor

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else
{

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal contact-form">
            <h3>Donor Registration</h3>
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, "Address", htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "NSW",
                            Value = "NSW"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "QLD",
                            Value = "QLD",
                            
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "SA",
                            Value = "SA"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "TAS",
                            Value = "TAS"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "VIC",
                            Value = "VIC",
                            Selected = true
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "WA",
                            Value = "WA"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "ACT",
                            Value = "ACT"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "NT",
                            Value = "NT"
                        });
                    }

                    @Html.DropDownListFor(model => model.State, listItems, "-- Select State --")
                @*   @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })*@ 
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                   
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-md-offset-3 col-md-6" })
                <div class="col-md-offset-3 col-md-6">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

           

            <div class="form-group">
                <div class="col-md-9">
                    <input type="submit" value="Create" class="btn-theme btn-style-two pull-right" />
                </div>
            </div>
        </div>
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/revolution")
    @Scripts.Render("~/bundles/jquery.fancybox.pack")
    @Scripts.Render("~/bundles/jquery.fancybox-media")
    @Scripts.Render("~/bundles/owl")
    @Scripts.Render("~/bundles/appear")
    @Scripts.Render("~/bundles/wow")
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/mixitup")
    @Scripts.Render("~/bundles/validate")
    @Scripts.Render("~/bundles/script")
    @Scripts.Render("~/bundles/newLeavesViz")
}
